'use strict';var cov_1vbbnhjdby=function(){var path="/home/hamptos/Artifacts/code/@shieldsbetter/nearley-indentify/index.js",hash="ab904b5145894dcb2d5c989e4e4402502609032d",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/hamptos/Artifacts/code/@shieldsbetter/nearley-indentify/index.js",statementMap:{"0":{start:{line:3,column:0},end:{line:227,column:2}},"1":{start:{line:5,column:8},end:{line:6,column:72}},"2":{start:{line:11,column:8},end:{line:19,column:10}},"3":{start:{line:14,column:12},end:{line:16,column:13}},"4":{start:{line:15,column:16},end:{line:15,column:55}},"5":{start:{line:18,column:12},end:{line:18,column:26}},"6":{start:{line:21,column:8},end:{line:21,column:38}},"7":{start:{line:22,column:8},end:{line:22,column:30}},"8":{start:{line:23,column:8},end:{line:23,column:29}},"9":{start:{line:24,column:8},end:{line:24,column:36}},"10":{start:{line:28,column:8},end:{line:30,column:9}},"11":{start:{line:29,column:12},end:{line:29,column:35}},"12":{start:{line:33,column:8},end:{line:35,column:9}},"13":{start:{line:34,column:12},end:{line:34,column:45}},"14":{start:{line:37,column:8},end:{line:37,column:22}},"15":{start:{line:41,column:8},end:{line:46,column:10}},"16":{start:{line:50,column:8},end:{line:55,column:10}},"17":{start:{line:57,column:8},end:{line:57,column:52}},"18":{start:{line:59,column:8},end:{line:59,column:44}},"19":{start:{line:60,column:8},end:{line:60,column:42}},"20":{start:{line:61,column:8},end:{line:61,column:52}},"21":{start:{line:65,column:8},end:{line:71,column:9}},"22":{start:{line:67,column:12},end:{line:67,column:75}},"23":{start:{line:70,column:12},end:{line:70,column:65}},"24":{start:{line:73,column:8},end:{line:73,column:23}},"25":{start:{line:77,column:8},end:{line:78,column:41}},"26":{start:{line:82,column:26},end:{line:82,column:47}},"27":{start:{line:83,column:31},end:{line:83,column:71}},"28":{start:{line:86,column:24},end:{line:86,column:26}},"29":{start:{line:87,column:28},end:{line:87,column:39}},"30":{start:{line:88,column:8},end:{line:129,column:9}},"31":{start:{line:89,column:12},end:{line:121,column:13}},"32":{start:{line:91,column:20},end:{line:98,column:21}},"33":{start:{line:92,column:24},end:{line:92,column:55}},"34":{start:{line:97,column:24},end:{line:97,column:58}},"35":{start:{line:100,column:20},end:{line:100,column:26}},"36":{start:{line:103,column:20},end:{line:106,column:23}},"37":{start:{line:108,column:20},end:{line:108,column:48}},"38":{start:{line:109,column:20},end:{line:109,column:48}},"39":{start:{line:110,column:20},end:{line:110,column:35}},"40":{start:{line:112,column:20},end:{line:112,column:26}},"41":{start:{line:115,column:20},end:{line:119,column:33}},"42":{start:{line:123,column:12},end:{line:123,column:48}},"43":{start:{line:124,column:12},end:{line:124,column:72}},"44":{start:{line:126,column:12},end:{line:128,column:13}},"45":{start:{line:127,column:16},end:{line:127,column:44}},"46":{start:{line:131,column:8},end:{line:133,column:9}},"47":{start:{line:132,column:12},end:{line:132,column:40}},"48":{start:{line:137,column:8},end:{line:225,column:9}},"49":{start:{line:140,column:12},end:{line:150,column:13}},"50":{start:{line:142,column:16},end:{line:142,column:33}},"51":{start:{line:143,column:16},end:{line:149,column:19}},"52":{start:{line:153,column:12},end:{line:163,column:13}},"53":{start:{line:154,column:36},end:{line:154,column:58}},"54":{start:{line:155,column:16},end:{line:162,column:19}},"55":{start:{line:171,column:12},end:{line:216,column:13}},"56":{start:{line:174,column:16},end:{line:215,column:17}},"57":{start:{line:176,column:20},end:{line:176,column:53}},"58":{start:{line:181,column:44},end:{line:181,column:66}},"59":{start:{line:182,column:20},end:{line:214,column:21}},"60":{start:{line:183,column:24},end:{line:195,column:25}},"61":{start:{line:184,column:28},end:{line:184,column:51}},"62":{start:{line:186,column:28},end:{line:188,column:29}},"63":{start:{line:187,column:32},end:{line:187,column:72}},"64":{start:{line:190,column:28},end:{line:194,column:31}},"65":{start:{line:197,column:25},end:{line:214,column:21}},"66":{start:{line:198,column:24},end:{line:200,column:25}},"67":{start:{line:199,column:28},end:{line:199,column:68}},"68":{start:{line:202,column:24},end:{line:202,column:57}},"69":{start:{line:204,column:24},end:{line:208,column:27}},"70":{start:{line:211,column:24},end:{line:213,column:25}},"71":{start:{line:212,column:28},end:{line:212,column:68}},"72":{start:{line:220,column:12},end:{line:220,column:46}},"73":{start:{line:224,column:12},end:{line:224,column:41}},"74":{start:{line:230,column:4},end:{line:230,column:27}},"75":{start:{line:233,column:28},end:{line:233,column:38}},"76":{start:{line:234,column:29},end:{line:234,column:45}},"77":{start:{line:238,column:4},end:{line:243,column:5}},"78":{start:{line:239,column:8},end:{line:239,column:27}},"79":{start:{line:241,column:9},end:{line:243,column:5}},"80":{start:{line:242,column:8},end:{line:242,column:26}},"81":{start:{line:245,column:4},end:{line:245,column:18}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:4},end:{line:4,column:5}},loc:{start:{line:4,column:54},end:{line:25,column:5}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:38},end:{line:11,column:39}},loc:{start:{line:11,column:47},end:{line:19,column:9}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:11},end:{line:38,column:5}},line:27},"3":{name:"(anonymous_3)",decl:{start:{line:40,column:4},end:{line:40,column:5}},loc:{start:{line:40,column:11},end:{line:47,column:5}},line:40},"4":{name:"(anonymous_4)",decl:{start:{line:49,column:4},end:{line:49,column:5}},loc:{start:{line:49,column:23},end:{line:62,column:5}},line:49},"5":{name:"(anonymous_5)",decl:{start:{line:64,column:4},end:{line:64,column:5}},loc:{start:{line:64,column:32},end:{line:74,column:5}},line:64},"6":{name:"(anonymous_6)",decl:{start:{line:76,column:4},end:{line:76,column:5}},loc:{start:{line:76,column:14},end:{line:79,column:5}},line:76},"7":{name:"(anonymous_7)",decl:{start:{line:81,column:4},end:{line:81,column:5}},loc:{start:{line:81,column:22},end:{line:226,column:5}},line:81},"8":{name:"peek",decl:{start:{line:229,column:9},end:{line:229,column:13}},loc:{start:{line:229,column:17},end:{line:231,column:1}},line:229},"9":{name:"defaultControlTokenRecognizer",decl:{start:{line:235,column:9},end:{line:235,column:38}},loc:{start:{line:235,column:46},end:{line:246,column:1}},line:235}},branchMap:{"0":{loc:{start:{line:6,column:16},end:{line:6,column:71}},type:"binary-expr",locations:[{start:{line:6,column:16},end:{line:6,column:38}},{start:{line:6,column:42},end:{line:6,column:71}}],line:6},"1":{loc:{start:{line:14,column:12},end:{line:16,column:13}},type:"if",locations:[{start:{line:14,column:12},end:{line:16,column:13}},{start:{line:14,column:12},end:{line:16,column:13}}],line:14},"2":{loc:{start:{line:28,column:8},end:{line:30,column:9}},type:"if",locations:[{start:{line:28,column:8},end:{line:30,column:9}},{start:{line:28,column:8},end:{line:30,column:9}}],line:28},"3":{loc:{start:{line:33,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:33,column:8},end:{line:35,column:9}},{start:{line:33,column:8},end:{line:35,column:9}}],line:33},"4":{loc:{start:{line:50,column:15},end:{line:55,column:9}},type:"binary-expr",locations:[{start:{line:50,column:15},end:{line:50,column:19}},{start:{line:50,column:23},end:{line:55,column:9}}],line:50},"5":{loc:{start:{line:65,column:8},end:{line:71,column:9}},type:"if",locations:[{start:{line:65,column:8},end:{line:71,column:9}},{start:{line:65,column:8},end:{line:71,column:9}}],line:65},"6":{loc:{start:{line:65,column:12},end:{line:66,column:39}},type:"binary-expr",locations:[{start:{line:65,column:12},end:{line:65,column:32}},{start:{line:65,column:36},end:{line:65,column:59}},{start:{line:66,column:16},end:{line:66,column:39}}],line:65},"7":{loc:{start:{line:77,column:15},end:{line:78,column:40}},type:"binary-expr",locations:[{start:{line:77,column:15},end:{line:77,column:29}},{start:{line:77,column:33},end:{line:77,column:50}},{start:{line:77,column:54},end:{line:77,column:71}},{start:{line:78,column:16},end:{line:78,column:40}}],line:77},"8":{loc:{start:{line:88,column:15},end:{line:88,column:74}},type:"binary-expr",locations:[{start:{line:88,column:15},end:{line:88,column:40}},{start:{line:88,column:44},end:{line:88,column:74}}],line:88},"9":{loc:{start:{line:89,column:12},end:{line:121,column:13}},type:"switch",locations:[{start:{line:90,column:16},end:{line:101,column:17}},{start:{line:102,column:16},end:{line:113,column:17}},{start:{line:114,column:16},end:{line:120,column:17}}],line:89},"10":{loc:{start:{line:91,column:20},end:{line:98,column:21}},type:"if",locations:[{start:{line:91,column:20},end:{line:98,column:21}},{start:{line:91,column:20},end:{line:98,column:21}}],line:91},"11":{loc:{start:{line:126,column:12},end:{line:128,column:13}},type:"if",locations:[{start:{line:126,column:12},end:{line:128,column:13}},{start:{line:126,column:12},end:{line:128,column:13}}],line:126},"12":{loc:{start:{line:131,column:8},end:{line:133,column:9}},type:"if",locations:[{start:{line:131,column:8},end:{line:133,column:9}},{start:{line:131,column:8},end:{line:133,column:9}}],line:131},"13":{loc:{start:{line:137,column:8},end:{line:225,column:9}},type:"if",locations:[{start:{line:137,column:8},end:{line:225,column:9}},{start:{line:137,column:8},end:{line:225,column:9}}],line:137},"14":{loc:{start:{line:140,column:12},end:{line:150,column:13}},type:"if",locations:[{start:{line:140,column:12},end:{line:150,column:13}},{start:{line:140,column:12},end:{line:150,column:13}}],line:140},"15":{loc:{start:{line:171,column:12},end:{line:216,column:13}},type:"if",locations:[{start:{line:171,column:12},end:{line:216,column:13}},{start:{line:171,column:12},end:{line:216,column:13}}],line:171},"16":{loc:{start:{line:174,column:16},end:{line:215,column:17}},type:"if",locations:[{start:{line:174,column:16},end:{line:215,column:17}},{start:{line:174,column:16},end:{line:215,column:17}}],line:174},"17":{loc:{start:{line:182,column:20},end:{line:214,column:21}},type:"if",locations:[{start:{line:182,column:20},end:{line:214,column:21}},{start:{line:182,column:20},end:{line:214,column:21}}],line:182},"18":{loc:{start:{line:186,column:28},end:{line:188,column:29}},type:"if",locations:[{start:{line:186,column:28},end:{line:188,column:29}},{start:{line:186,column:28},end:{line:188,column:29}}],line:186},"19":{loc:{start:{line:197,column:25},end:{line:214,column:21}},type:"if",locations:[{start:{line:197,column:25},end:{line:214,column:21}},{start:{line:197,column:25},end:{line:214,column:21}}],line:197},"20":{loc:{start:{line:198,column:24},end:{line:200,column:25}},type:"if",locations:[{start:{line:198,column:24},end:{line:200,column:25}},{start:{line:198,column:24},end:{line:200,column:25}}],line:198},"21":{loc:{start:{line:211,column:24},end:{line:213,column:25}},type:"if",locations:[{start:{line:211,column:24},end:{line:213,column:25}},{start:{line:211,column:24},end:{line:213,column:25}}],line:211},"22":{loc:{start:{line:238,column:4},end:{line:243,column:5}},type:"if",locations:[{start:{line:238,column:4},end:{line:243,column:5}},{start:{line:238,column:4},end:{line:243,column:5}}],line:238},"23":{loc:{start:{line:241,column:9},end:{line:243,column:5}},type:"if",locations:[{start:{line:241,column:9},end:{line:243,column:5}},{start:{line:241,column:9},end:{line:243,column:5}}],line:241}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_1vbbnhjdby.s[0]++;module.exports=class{constructor(nearleyLexer,controlTokenRecognizer){cov_1vbbnhjdby.f[0]++;cov_1vbbnhjdby.s[1]++;controlTokenRecognizer=(cov_1vbbnhjdby.b[0][0]++,controlTokenRecognizer)||(cov_1vbbnhjdby.b[0][1]++,defaultControlTokenRecognizer);// For our convenience, we want to be able to safely call this with
// undefined and just have it return undefined in that case, but we
// don't want to trouble our client with that detail.
cov_1vbbnhjdby.s[2]++;this.controlTokenRecognizer=token=>{cov_1vbbnhjdby.f[1]++;let result;cov_1vbbnhjdby.s[3]++;if(token!==undefined){cov_1vbbnhjdby.b[1][0]++;cov_1vbbnhjdby.s[4]++;result=controlTokenRecognizer(token);}else{cov_1vbbnhjdby.b[1][1]++;}cov_1vbbnhjdby.s[5]++;return result;};cov_1vbbnhjdby.s[6]++;this.baseLexer=nearleyLexer;cov_1vbbnhjdby.s[7]++;this.indentStack=[];cov_1vbbnhjdby.s[8]++;this.tokenQueue=[];cov_1vbbnhjdby.s[9]++;this.beginningOfLine=true;}next(){cov_1vbbnhjdby.f[2]++;cov_1vbbnhjdby.s[10]++;if(this.tokenQueue.length===0){cov_1vbbnhjdby.b[2][0]++;cov_1vbbnhjdby.s[11]++;this.readyMoreTokens();}else{cov_1vbbnhjdby.b[2][1]++;}let result;cov_1vbbnhjdby.s[12]++;if(this.tokenQueue.length!==0){cov_1vbbnhjdby.b[3][0]++;cov_1vbbnhjdby.s[13]++;result=this.tokenQueue.shift();}else{cov_1vbbnhjdby.b[3][1]++;}cov_1vbbnhjdby.s[14]++;return result;}save(){cov_1vbbnhjdby.f[3]++;cov_1vbbnhjdby.s[15]++;return{baseState:this.baseLexer.save(),indentStack:this.indentStack.slice(),tokenQueue:this.tokenQueue.slice(),beginningOfLine:this.beginningOfLine};}reset(chunk,info){cov_1vbbnhjdby.f[4]++;cov_1vbbnhjdby.s[16]++;info=(cov_1vbbnhjdby.b[4][0]++,info)||(cov_1vbbnhjdby.b[4][1]++,{baseState:undefined,indentStack:[],tokenQueue:[],beginningOfLine:true});cov_1vbbnhjdby.s[17]++;this.baseLexer.reset(chunk,info.baseState);cov_1vbbnhjdby.s[18]++;this.indentStack=info.indentStack;cov_1vbbnhjdby.s[19]++;this.tokenQueue=info.tokenQueue;cov_1vbbnhjdby.s[20]++;this.beginningOfLine=info.beginningOfLine;}formatError(token,message){cov_1vbbnhjdby.f[5]++;cov_1vbbnhjdby.s[21]++;if((cov_1vbbnhjdby.b[6][0]++,token.type==='eol')||(cov_1vbbnhjdby.b[6][1]++,token.type==='indent')||(cov_1vbbnhjdby.b[6][2]++,token.type==='dedent')){cov_1vbbnhjdby.b[5][0]++;cov_1vbbnhjdby.s[22]++;message=this.baseLexer.formatError(token.baseToken,message);}else{cov_1vbbnhjdby.b[5][1]++;cov_1vbbnhjdby.s[23]++;message=this.baseLexer.formatError(token,message);}cov_1vbbnhjdby.s[24]++;return message;}has(name){cov_1vbbnhjdby.f[6]++;cov_1vbbnhjdby.s[25]++;return(cov_1vbbnhjdby.b[7][0]++,name==='eol')||(cov_1vbbnhjdby.b[7][1]++,name==='indent')||(cov_1vbbnhjdby.b[7][2]++,name==='dedent')||(cov_1vbbnhjdby.b[7][3]++,this.baseLexer.has(name));}readyMoreTokens(){cov_1vbbnhjdby.f[7]++;let latestToken=(cov_1vbbnhjdby.s[26]++,this.baseLexer.next());let controlTokenType=(cov_1vbbnhjdby.s[27]++,this.controlTokenRecognizer(latestToken));let firstLineIndent;let curIndent=(cov_1vbbnhjdby.s[28]++,'');let lastRealToken=(cov_1vbbnhjdby.s[29]++,latestToken);cov_1vbbnhjdby.s[30]++;while((cov_1vbbnhjdby.b[8][0]++,latestToken!==undefined)&&(cov_1vbbnhjdby.b[8][1]++,controlTokenType!==undefined)){cov_1vbbnhjdby.s[31]++;switch(controlTokenType){case'indent':cov_1vbbnhjdby.b[9][0]++;{cov_1vbbnhjdby.s[32]++;if(this.beginningOfLine){cov_1vbbnhjdby.b[10][0]++;cov_1vbbnhjdby.s[33]++;curIndent+=latestToken.value;}else{cov_1vbbnhjdby.b[10][1]++;cov_1vbbnhjdby.s[34]++;// Indent token in the middle of a line.  Not
// interesting to us--emit it along to the client.
this.tokenQueue.push(latestToken);}cov_1vbbnhjdby.s[35]++;break;}case'newline':cov_1vbbnhjdby.b[9][1]++;{cov_1vbbnhjdby.s[36]++;this.tokenQueue.push({type:'eol',baseToken:latestToken});cov_1vbbnhjdby.s[37]++;this.beginningOfLine=true;cov_1vbbnhjdby.s[38]++;firstLineIndent=curIndent;cov_1vbbnhjdby.s[39]++;curIndent='';cov_1vbbnhjdby.s[40]++;break;}default:cov_1vbbnhjdby.b[9][2]++;{cov_1vbbnhjdby.s[41]++;throw new Error('controlTokenRecognizer() returned an '+'unknown type.  Must be undefined, "indent", or '+'"newline".  Was: '+controlTokenType+'.  '+'Failed on token: '+JSON.stringify(latestToken)+'.');}}cov_1vbbnhjdby.s[42]++;latestToken=this.baseLexer.next();cov_1vbbnhjdby.s[43]++;controlTokenType=this.controlTokenRecognizer(latestToken);cov_1vbbnhjdby.s[44]++;if(latestToken){cov_1vbbnhjdby.b[11][0]++;cov_1vbbnhjdby.s[45]++;lastRealToken=latestToken;}else{cov_1vbbnhjdby.b[11][1]++;}}cov_1vbbnhjdby.s[46]++;if(!firstLineIndent){cov_1vbbnhjdby.b[12][0]++;cov_1vbbnhjdby.s[47]++;firstLineIndent=curIndent;}else{cov_1vbbnhjdby.b[12][1]++;}// We've reached the end of the stream, or a non-indent + non-newline
// token.
cov_1vbbnhjdby.s[48]++;if(latestToken===undefined){cov_1vbbnhjdby.b[13][0]++;cov_1vbbnhjdby.s[49]++;// End of stream.  Let's clean this up.
if(!this.done){cov_1vbbnhjdby.b[14][0]++;cov_1vbbnhjdby.s[50]++;// We haven't emitted the end of the final line yet.
this.done=true;cov_1vbbnhjdby.s[51]++;this.tokenQueue.push({type:'eol',// Note that this could still be undefined if we came into
// this method at the end of the stream.
baseToken:lastRealToken});}else{cov_1vbbnhjdby.b[14][1]++;}// Clean up any indentation levels.
cov_1vbbnhjdby.s[52]++;while(this.indentStack.length>1){const dedentValue=(cov_1vbbnhjdby.s[53]++,this.indentStack.pop());cov_1vbbnhjdby.s[54]++;this.tokenQueue.push({type:'dedent',value:peek(this.indentStack),// Note that this could still be undefined if we came into
// this method at the end of the stream.
baseToken:lastRealToken});}}else{cov_1vbbnhjdby.b[13][1]++;cov_1vbbnhjdby.s[55]++;// Some non-indent, non-newline character.  If this.beginningOfLine
// is true, we're the first token of the line and curIndent is our
// indent level.  Otherwise, we're some middle-of-line token and
// curToken is irrelevant.
if(this.beginningOfLine){cov_1vbbnhjdby.b[15][0]++;cov_1vbbnhjdby.s[56]++;// We need to do indent bookkeeping.
if(this.indentStack.length===0){cov_1vbbnhjdby.b[16][0]++;cov_1vbbnhjdby.s[57]++;// We've yet to establish an indent level.  Let's do that.
this.indentStack.push(curIndent);}else{cov_1vbbnhjdby.b[16][1]++;// We have an established indent level.  Let's emit
// appropriate indent/dedent/newline events.
let establishedIndent=(cov_1vbbnhjdby.s[58]++,peek(this.indentStack));cov_1vbbnhjdby.s[59]++;if(curIndent.length<establishedIndent.length){cov_1vbbnhjdby.b[17][0]++;cov_1vbbnhjdby.s[60]++;while(peek(this.indentStack)!==curIndent){cov_1vbbnhjdby.s[61]++;this.indentStack.pop();cov_1vbbnhjdby.s[62]++;if(this.indentStack.length===0){cov_1vbbnhjdby.b[18][0]++;cov_1vbbnhjdby.s[63]++;throw new Error('Inconsistent indent.');}else{cov_1vbbnhjdby.b[18][1]++;}cov_1vbbnhjdby.s[64]++;this.tokenQueue.push({type:'dedent',value:curIndent,baseToken:latestToken});}}else{cov_1vbbnhjdby.b[17][1]++;cov_1vbbnhjdby.s[65]++;if(curIndent.length>establishedIndent.length){cov_1vbbnhjdby.b[19][0]++;cov_1vbbnhjdby.s[66]++;if(!curIndent.startsWith(establishedIndent)){cov_1vbbnhjdby.b[20][0]++;cov_1vbbnhjdby.s[67]++;throw new Error('Inconsistent indent.');}else{cov_1vbbnhjdby.b[20][1]++;}cov_1vbbnhjdby.s[68]++;this.indentStack.push(curIndent);cov_1vbbnhjdby.s[69]++;this.tokenQueue.push({type:'indent',value:curIndent,baseToken:latestToken});}else{cov_1vbbnhjdby.b[19][1]++;cov_1vbbnhjdby.s[70]++;if(curIndent!==establishedIndent){cov_1vbbnhjdby.b[21][0]++;cov_1vbbnhjdby.s[71]++;throw new Error('Inconsistent indent.');}else{cov_1vbbnhjdby.b[21][1]++;}}}}}else{cov_1vbbnhjdby.b[15][1]++;}// Having done any necessary indent/dedent bookkeeping, emit the
// token itself.
cov_1vbbnhjdby.s[72]++;this.tokenQueue.push(latestToken);// Having found a non-newline token, we're no longer at the
// beginning of the line.
cov_1vbbnhjdby.s[73]++;this.beginningOfLine=false;}}};function peek(a){cov_1vbbnhjdby.f[8]++;cov_1vbbnhjdby.s[74]++;return a[a.length-1];}const defaultIndentRegexp=(cov_1vbbnhjdby.s[75]++,/^[\t ]+$/);const defaultNewlineRegexp=(cov_1vbbnhjdby.s[76]++,/^(?:\n|\r\n)+$/);function defaultControlTokenRecognizer(token){cov_1vbbnhjdby.f[9]++;let result;cov_1vbbnhjdby.s[77]++;if(defaultNewlineRegexp.test(token.value)){cov_1vbbnhjdby.b[22][0]++;cov_1vbbnhjdby.s[78]++;result='newline';}else{cov_1vbbnhjdby.b[22][1]++;cov_1vbbnhjdby.s[79]++;if(defaultIndentRegexp.test(token.value)){cov_1vbbnhjdby.b[23][0]++;cov_1vbbnhjdby.s[80]++;result='indent';}else{cov_1vbbnhjdby.b[23][1]++;}}cov_1vbbnhjdby.s[81]++;return result;}